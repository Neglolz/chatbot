{"version":3,"sources":["../index.js"],"names":["restify","require","botbuilder","server","createServer","listen","process","env","port","PORT","console","log","name","url","connector","ChatConnector","appId","APP_ID","appPassword","APP_SECRET","post","bot","UniversalBot","session","send","message","text","JSON","stringify","dialogData","on","membersAdded","length","map","x","isSelf","id","address","join","Message"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,YAAR,CAAjB;;AAEA;AACA,IAAIE,SAASH,QAAQI,YAAR,EAAb;AACAD,OAAOE,MAAP,CAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBF,QAAQC,GAAR,CAAYE,IAAhC,IAAwC,IAAtD,EAA4D,YAAY;AACpEC,YAAQC,GAAR,CAAY,sBAAZ,EAAoCR,OAAOS,IAA3C,EAAiDT,OAAOU,GAAxD;AACH,CAFD;;AAIA;AACA,IAAIC,YAAY,IAAIZ,WAAWa,aAAf,CAA6B;AACzCC,WAAOV,QAAQC,GAAR,CAAYU,MADsB;AAEzCC,iBAAaZ,QAAQC,GAAR,CAAYY;AAFgB,CAA7B,CAAhB;;AAKA;AACAhB,OAAOiB,IAAP,CAAY,eAAZ,EAA6BN,UAAUT,MAAV,EAA7B;;AAEA;AACA,IAAIgB,MAAM,IAAInB,WAAWoB,YAAf,CAA4BR,SAA5B,EAAuC,UAAUS,OAAV,EAAmB;AAChEA,YAAQC,IAAR,CAAa,mBAAb,EAAkCD,QAAQE,OAAR,CAAgBC,IAAlD;AACA;AACAH,YAAQC,IAAR,CAAaG,KAAKC,SAAL,CAAeL,QAAQM,UAAvB,CAAb;AACAR,QAAIS,EAAJ,CAAO,QAAP,EAAiB,YAAM;AACnBP,gBAAQC,IAAR,CAAa,WAAb;AACH,KAFD;AAGAH,QAAIS,EAAJ,CAAO,oBAAP,EAA6B,UAAUL,OAAV,EAAmB;;AAE5C,YAAIA,QAAQM,YAAR,IAAwBN,QAAQM,YAAR,CAAqBC,MAArB,GAA8B,CAA1D,EAA6D;;AAEzD,gBAAID,eAAeN,QAAQM,YAAR,CAAqBE,GAArB,CAAyB,UAAUC,CAAV,EAAa;AACrD,oBAAIC,SAASD,EAAEE,EAAF,IAAQX,QAAQY,OAAR,CAAgBhB,GAAhB,CAAoBe,EAAzC;AACA,uBAAO,CAACD,SAASV,QAAQY,OAAR,CAAgBhB,GAAhB,CAAoBT,IAA7B,GAAoCsB,EAAEtB,IAAvC,KAAgD,MAAM,MAAN,GAAesB,EAAEE,EAAjB,GAAsB,IAA7E;AACH,aAHkB,EAGhBE,IAHgB,CAGX,IAHW,CAAnB;;AAMAjB,gBAAIG,IAAJ,CAAS,IAAItB,WAAWqC,OAAf,GACJF,OADI,CACIZ,QAAQY,OADZ,EAEJX,IAFI,CAEC,eAAeK,YAFhB,CAAT;AAGH;AACJ,KAdD;AAgBH,CAvBS,CAAV","file":"index.js","sourcesContent":["var restify = require('restify')\nvar botbuilder = require('botbuilder')\n\n// setup the restify server\nlet server = restify.createServer()\nserver.listen(process.env.port || process.env.PORT || 3987, function () {\n    console.log('%s bot started at %s', server.name, server.url);\n})\n\n// create chat connector\nlet connector = new botbuilder.ChatConnector({\n    appId: process.env.APP_ID,\n    appPassword: process.env.APP_SECRET\n})\n\n// Listening for user inputs\nserver.post('/api/messages', connector.listen())\n\n// Reply by echoing\nlet bot = new botbuilder.UniversalBot(connector, function (session) {\n    session.send('votre message %s ', session.message.text)\n    //session.send(\"you have tapped: ${session.message.text} | [length: ${session.message.text.length}]\")\n    session.send(JSON.stringify(session.dialogData))\n    bot.on('typing', () => {\n        session.send('ca vient?');\n    })\n    bot.on('conversationUpdate', function (message) {\n\n        if (message.membersAdded && message.membersAdded.length > 0) {\n\n            var membersAdded = message.membersAdded.map(function (x) {\n                var isSelf = x.id == message.address.bot.id;\n                return (isSelf ? message.address.bot.name : x.name) || ' ' + '(Id=' + x.id + ' )'\n            }).join(', ');\n\n\n            bot.send(new botbuilder.Message()\n                .address(message.address)\n                .text('Bienvenue ' + membersAdded));\n        }\n    });\n\n});"]}