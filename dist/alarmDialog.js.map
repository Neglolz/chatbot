{"version":3,"sources":["../alarmDialog.js"],"names":["botbuilder","require","library","Library","alarmToSave","dialog","session","Prompts","text","results","name","response","args","reprompt","author","time","replaceDialog","date","EntityRecognizer","resolveTime","Date","parse","toUTCString","confirm","status","createdDate","userData","alarms","push","console","log","endDialog","endConversationAction","matches","confirmPrompt","triggerAction","onSelectAction","next","beginDialog","action","i","length","send","module","exports"],"mappings":"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","file":"alarmDialog.js","sourcesContent":["/**\n * Created by johnnyribeiro on 13/10/2017.\n */\nconst botbuilder = require('botbuilder');\n\nconst library = new botbuilder.Library('alarms');\nlet alarmToSave;\nlibrary.dialog('saveAlarmDialog', [\n    (session) => {\n        alarmToSave = {};\n        botbuilder.Prompts.text(session, 'What\\'s your alarm name ?')\n    },\n    (session, results) => {\n        alarmToSave.name = results.response;\n        botbuilder.Prompts.text(session, `What's your name ?`)\n    },\n    (session, results, args) => {\n        if (args && args.reprompt) {\n            botbuilder.Prompts.text(\"I've already the datetime\");\n        } else {\n            alarmToSave.author = results.response;\n            botbuilder.Prompts.time(session, \"Please provide a alarm date and time (e.g.: June 6th at 5pm)\");\n        }\n    },\n    (session, results) => {\n        //let matched = results.response.match();\n        if (false) { // typeof results.response === 'undefined'\n            //undefined\n            session.replaceDialog('saveAlarmDialog');\n        } else {\n            // Good date\n            alarmToSave.date = botbuilder.EntityRecognizer.resolveTime([results.response]);\n            alarmToSave.date = new Date(Date.parse(alarmToSave.date)).toUTCString();\n            botbuilder.Prompts.confirm(session, 'Do you want activ alarm ?')\n        }\n    },\n    (session, results) => {\n        alarmToSave.status = results.response;\n        alarmToSave.createdDate = new Date().toUTCString();\n\n        if (typeof  session.userData.alarms === 'undefined') {\n            session.userData.alarms = []\n        }\n        session.userData.alarms.push(alarmToSave);\n\n        console.log('result', alarmToSave);\n        session.endDialog(`It's done, your alarm is saved !`\n            +`<br>Alarm name : ${alarmToSave.name}<br>`\n            +`<br>Trigger at : ${alarmToSave.date}<br>`\n            +`<br>Activ : ${alarmToSave.status}<br>`\n            +`<br>created by ${alarmToSave.author} at ${alarmToSave.createdDate}`);\n\n\n    }\n]).endConversationAction(\n    \"endAskTime\", \"Ok. It's done.\",\n    {\n        matches: /^cancel$|^goodbye$|^skip$|^stop$/i,\n        confirmPrompt: \"This will cancel your request. Are you sure?\"\n    }\n)\n// Once triggered, will start a new dialog as specified by\n// the 'onSelectAction' option.\n    .triggerAction({\n        matches: /^save alarm$|^enregistrer alarme$/i,\n        onSelectAction: (session, args, next) => {\n            // Add the help dialog to the top of the dialog stack\n            // (override the default behavior of replacing the stack)\n            session.beginDialog(args.action, args);\n        }\n    });\n\nlibrary.dialog('getAlarmsDialog', [\n    (session) => {\n        console.log('test',session.userData);\n        console.log('test',session.userData.alarms)\n        if(session.userData.alarms){\n            for (let i = 0; i < session.userData.alarms.length; i++){\n                session.send(`Alarm ${session.userData.alarms[i].name}<br/>Trigger at : $\\{session.userData.alarms[i].date}`)\n            }\n        }else{\n\n        }\n    }\n]).triggerAction({\n    matches: /^get alarms$|^consulter les alarmes$/i,\n    onSelectAction: (session, args, next) => {\n        // Add the help dialog to the top of the dialog stack\n        // (override the default behavior of replacing the stack)\n        session.beginDialog(args.action, args);\n    }\n});\n\nlibrary.dialog('test', [\n    (session) => {\n        console.log('test',session.userData);\n        console.log('test',session.userData.alarms)\n    }\n]).triggerAction({\n    matches: /^test$/i,\n    onSelectAction: (session, args, next) => {\n        // Add the help dialog to the top of the dialog stack\n        // (override the default behavior of replacing the stack)\n        session.beginDialog(args.action, args);\n    }\n});\n\nmodule.exports = library;"]}